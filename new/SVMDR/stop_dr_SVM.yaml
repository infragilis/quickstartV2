#-----------------------------------------------------------------------------
#Email       : boonstra@netapp.com
#Created     : 2021
#Description : This playbook stops the source SVM to prep for SVMDR 
#Dependencies: netapp-lib,netapp collections
#Link        : n/a
#Disclaimer  : THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#            : IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#            : WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#            : PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#            : ANYDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#            : DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
#            : GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#            : INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#            : WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#            : NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#            : THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#-----------------------------------------------------------------------------
- hosts: localhost
  name: ONTAP
  gather_facts: false
  collections:
    - netapp.ontap
  vars_files:
   ../vars.yaml
  vars:
    login: &login
      hostname: "{{ src_cluster }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false  
  tasks:
  - name: stopping svm {{ dst_svm }} on {{ dst_cluster }}
    na_ontap_command:
      hostname: "{{ dst_cluster }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
      command: ['vserver stop {{ dst_svm }}']
  - name: waiting for svm status stopped for{{ dst_cluster }} / {{ dst_svm }}
    na_ontap_command:
      hostname: "{{ dst_cluster }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
      command: ['vserver show "{{ dst_svm }}" -fields operational-state']
      return_dict: true
    register: src_svmstatus
    until: src_svmstatus.msg.stdout.find("stopped") != -1
    retries: 12
    delay: 30

  - name: return svm status
    debug:
       msg : "{{ src_svmstatus.msg.stdout_lines[2].split()[1] }}"
